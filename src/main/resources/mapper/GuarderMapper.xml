<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.codeshu.mapper.GuarderMapper">

    <!--查询监护人的同时可以查询出它监护的老人-->
    <resultMap id="guarderMap" type="com.codeshu.entity.Guarder">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="age" column="age"/>
        <result property="salt" column="salt"/>
        <result property="phone" column="phone"/>
        <result property="sex" column="sex"/>
        <!--嵌套结果导致分页数量多了，所以用嵌套查询-->
        <collection property="olders" ofType="com.codeshu.entity.Older" column="username"
                    select="com.codeshu.mapper.OlderMapper.selectOlderByGuarderName"/>
    </resultMap>
    <select id="selectByName" parameterType="string" resultMap="guarderMap">
        select * from guarder where username=#{username}
    </select>
    <!--查询所有-->
    <select id="selectAll" resultMap="guarderMap">
        select * from guarder
    </select>

    <!--模糊查询-->
    <select id="selectByLikeName" parameterType="string" resultType="com.codeshu.entity.Guarder">
        select * from guarder where username like concat('%',#{username},'%')
    </select>
    <!--删除-->
    <delete id="delete" parameterType="int">
        delete from guarder where id = #{id}
    </delete>
    <!--不包括密码-->
    <update id="update" parameterType="com.codeshu.entity.Guarder">
        update guarder set username=#{username},age=#{age},sex=#{sex},phone=#{phone} where id = #{id}
    </update>
    <!--更新个人信息，包括密码-->
    <update id="updateInfo" parameterType="com.codeshu.entity.Guarder">
        update guarder set username=#{username},password=#{password},salt=#{salt},age=#{age},sex=#{sex},phone=#{phone} where id = #{id}
    </update>
    <select id="total" resultType="int">
        select count(*) from guarder
    </select>
    <insert id="insert" parameterType="com.codeshu.entity.Guarder" useGeneratedKeys="true" keyProperty="id">
        insert into guarder(username,password,age,sex,phone,salt,roleId) values(#{username},#{password},#{age},#{sex},#{phone},#{salt},2)
    </insert>
    <!--新增监护的老人-->
    <update id="insertOlder" parameterType="string">
        update older set guarderId=#{guarderId} where name=#{olderName}
    </update>
</mapper>
